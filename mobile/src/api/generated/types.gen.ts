// This file is auto-generated by @hey-api/openapi-ts

export type GetHealthData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health/';
};

export type GetHealthErrors = {
    /**
     * Default Response
     */
    503: {
        status: 'healthy' | 'unhealthy';
        timestamp: string;
        services: {
            database: 'healthy' | 'unhealthy' | 'unknown';
            redis: 'healthy' | 'unhealthy' | 'unknown';
            queue: 'healthy' | 'unhealthy' | 'unknown';
        };
        version: string;
        uptime: number;
    };
};

export type GetHealthError = GetHealthErrors[keyof GetHealthErrors];

export type GetHealthResponses = {
    /**
     * Default Response
     */
    200: {
        status: 'healthy' | 'unhealthy';
        timestamp: string;
        services: {
            database: 'healthy' | 'unhealthy' | 'unknown';
            redis: 'healthy' | 'unhealthy' | 'unknown';
            queue: 'healthy' | 'unhealthy' | 'unknown';
        };
        version: string;
        uptime: number;
    };
};

export type GetHealthResponse = GetHealthResponses[keyof GetHealthResponses];

export type GetHealthLiveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health/live';
};

export type GetHealthLiveResponses = {
    /**
     * Default Response
     */
    200: {
        status: 'ok';
        timestamp: string;
    };
};

export type GetHealthLiveResponse = GetHealthLiveResponses[keyof GetHealthLiveResponses];

export type GetHealthReadyData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health/ready';
};

export type GetHealthReadyErrors = {
    /**
     * Default Response
     */
    503: {
        status: 'not_ready';
        timestamp: string;
        reason: string;
    };
};

export type GetHealthReadyError = GetHealthReadyErrors[keyof GetHealthReadyErrors];

export type GetHealthReadyResponses = {
    /**
     * Default Response
     */
    200: {
        status: 'ready';
        timestamp: string;
    };
};

export type GetHealthReadyResponse = GetHealthReadyResponses[keyof GetHealthReadyResponses];

export type GetApiClaudeCodeRepositoriesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/claude-code/repositories/';
};

export type GetApiClaudeCodeRepositoriesErrors = {
    /**
     * Default Response
     */
    500: {
        error: string;
        code?: string;
    };
};

export type GetApiClaudeCodeRepositoriesError = GetApiClaudeCodeRepositoriesErrors[keyof GetApiClaudeCodeRepositoriesErrors];

export type GetApiClaudeCodeRepositoriesResponses = {
    /**
     * Default Response
     */
    200: {
        repositories: Array<{
            /**
             * The folder name of the repository
             */
            folderName: string;
            /**
             * The absolute path to the repository
             */
            path: string;
            /**
             * Whether the folder contains a .git directory
             */
            isGitRepository: boolean;
        }>;
        total: number;
        /**
         * The configured GITHUB_REPOS_DIRECTORY
         */
        githubReposDirectory: string;
    };
};

export type GetApiClaudeCodeRepositoriesResponse = GetApiClaudeCodeRepositoriesResponses[keyof GetApiClaudeCodeRepositoriesResponses];

export type GetApiClaudeCodeSessionsData = {
    body?: never;
    path?: never;
    query?: {
        status?: 'active' | 'inactive' | 'archived';
        limit?: number;
        offset?: number;
    };
    url: '/api/claude-code/sessions/';
};

export type GetApiClaudeCodeSessionsResponses = {
    /**
     * Default Response
     */
    200: {
        sessions: Array<{
            id: string;
            projectPath: string;
            claudeDirectoryPath?: string;
            claudeCodeSessionId?: string;
            context?: string;
            status: 'active' | 'inactive' | 'archived';
            metadata?: unknown;
            createdAt: string;
            updatedAt: string;
            lastAccessedAt: string;
            isWorking: boolean;
            currentJobId?: string;
            lastJobStatus?: string;
        }>;
        total: number;
        limit: number;
        offset: number;
    };
};

export type GetApiClaudeCodeSessionsResponse = GetApiClaudeCodeSessionsResponses[keyof GetApiClaudeCodeSessionsResponses];

export type PostApiClaudeCodeSessionsData = {
    body?: {
        projectPath?: string;
        folderName?: string;
        context?: string;
        metadata?: {
            repository?: string;
            branch?: string;
            allowedTools?: Array<string>;
        };
    };
    path?: never;
    query?: never;
    url: '/api/claude-code/sessions/';
};

export type PostApiClaudeCodeSessionsErrors = {
    /**
     * Default Response
     */
    400: {
        error: string;
        code?: string;
    };
};

export type PostApiClaudeCodeSessionsError = PostApiClaudeCodeSessionsErrors[keyof PostApiClaudeCodeSessionsErrors];

export type PostApiClaudeCodeSessionsResponses = {
    /**
     * Default Response
     */
    201: {
        id: string;
        projectPath: string;
        claudeDirectoryPath?: string;
        claudeCodeSessionId?: string;
        context?: string;
        status: 'active' | 'inactive' | 'archived';
        metadata?: unknown;
        createdAt: string;
        updatedAt: string;
        lastAccessedAt: string;
        isWorking: boolean;
        currentJobId?: string;
        lastJobStatus?: string;
    };
};

export type PostApiClaudeCodeSessionsResponse = PostApiClaudeCodeSessionsResponses[keyof PostApiClaudeCodeSessionsResponses];

export type DeleteApiClaudeCodeSessionsBySessionIdData = {
    body?: never;
    path: {
        sessionId: string;
    };
    query?: never;
    url: '/api/claude-code/sessions/{sessionId}';
};

export type DeleteApiClaudeCodeSessionsBySessionIdErrors = {
    /**
     * Default Response
     */
    404: {
        error: string;
        code?: string;
    };
};

export type DeleteApiClaudeCodeSessionsBySessionIdError = DeleteApiClaudeCodeSessionsBySessionIdErrors[keyof DeleteApiClaudeCodeSessionsBySessionIdErrors];

export type DeleteApiClaudeCodeSessionsBySessionIdResponses = {
    /**
     * Default Response
     */
    200: {
        success: boolean;
    };
};

export type DeleteApiClaudeCodeSessionsBySessionIdResponse = DeleteApiClaudeCodeSessionsBySessionIdResponses[keyof DeleteApiClaudeCodeSessionsBySessionIdResponses];

export type GetApiClaudeCodeSessionsBySessionIdData = {
    body?: never;
    path: {
        sessionId: string;
    };
    query?: never;
    url: '/api/claude-code/sessions/{sessionId}';
};

export type GetApiClaudeCodeSessionsBySessionIdErrors = {
    /**
     * Default Response
     */
    404: {
        error: string;
        code?: string;
    };
};

export type GetApiClaudeCodeSessionsBySessionIdError = GetApiClaudeCodeSessionsBySessionIdErrors[keyof GetApiClaudeCodeSessionsBySessionIdErrors];

export type GetApiClaudeCodeSessionsBySessionIdResponses = {
    /**
     * Default Response
     */
    200: {
        id: string;
        projectPath: string;
        claudeDirectoryPath?: string;
        claudeCodeSessionId?: string;
        context?: string;
        status: 'active' | 'inactive' | 'archived';
        metadata?: unknown;
        createdAt: string;
        updatedAt: string;
        lastAccessedAt: string;
        isWorking: boolean;
        currentJobId?: string;
        lastJobStatus?: string;
    };
};

export type GetApiClaudeCodeSessionsBySessionIdResponse = GetApiClaudeCodeSessionsBySessionIdResponses[keyof GetApiClaudeCodeSessionsBySessionIdResponses];

export type PatchApiClaudeCodeSessionsBySessionIdData = {
    body?: {
        context?: string;
        status?: 'active' | 'inactive' | 'archived';
        metadata?: unknown;
    };
    path: {
        sessionId: string;
    };
    query?: never;
    url: '/api/claude-code/sessions/{sessionId}';
};

export type PatchApiClaudeCodeSessionsBySessionIdErrors = {
    /**
     * Default Response
     */
    400: {
        error: string;
        code?: string;
    };
    /**
     * Default Response
     */
    404: {
        error: string;
        code?: string;
    };
};

export type PatchApiClaudeCodeSessionsBySessionIdError = PatchApiClaudeCodeSessionsBySessionIdErrors[keyof PatchApiClaudeCodeSessionsBySessionIdErrors];

export type PatchApiClaudeCodeSessionsBySessionIdResponses = {
    /**
     * Default Response
     */
    200: {
        id: string;
        projectPath: string;
        claudeDirectoryPath?: string;
        claudeCodeSessionId?: string;
        context?: string;
        status: 'active' | 'inactive' | 'archived';
        metadata?: unknown;
        createdAt: string;
        updatedAt: string;
        lastAccessedAt: string;
        isWorking: boolean;
        currentJobId?: string;
        lastJobStatus?: string;
    };
};

export type PatchApiClaudeCodeSessionsBySessionIdResponse = PatchApiClaudeCodeSessionsBySessionIdResponses[keyof PatchApiClaudeCodeSessionsBySessionIdResponses];

export type GetApiClaudeCodeSessionsBySessionIdMessagesData = {
    body?: never;
    path: {
        sessionId: string;
    };
    query?: never;
    url: '/api/claude-code/sessions/{sessionId}/messages';
};

export type GetApiClaudeCodeSessionsBySessionIdMessagesErrors = {
    /**
     * Default Response
     */
    404: {
        error: string;
        code?: string;
    };
};

export type GetApiClaudeCodeSessionsBySessionIdMessagesError = GetApiClaudeCodeSessionsBySessionIdMessagesErrors[keyof GetApiClaudeCodeSessionsBySessionIdMessagesErrors];

export type GetApiClaudeCodeSessionsBySessionIdMessagesResponses = {
    /**
     * Default Response
     */
    200: {
        messages: Array<{
            id: string;
            sessionId: string;
            role: 'user' | 'assistant';
            content: string;
            timestamp: string;
            claudeSessionId?: string;
            children: Array<{
                id: string;
                role: 'user' | 'assistant';
                content: string;
                timestamp: string;
                toolCalls?: Array<{
                    name: string;
                    input: unknown;
                }>;
                toolResults?: Array<{
                    tool_use_id: string;
                    content: string;
                }>;
                thinking?: string;
            }>;
        }>;
        session: {
            id: string;
            isWorking: boolean;
            currentJobId?: string | unknown;
            lastJobStatus?: string | unknown;
            status: 'active' | 'inactive' | 'archived';
        };
    };
};

export type GetApiClaudeCodeSessionsBySessionIdMessagesResponse = GetApiClaudeCodeSessionsBySessionIdMessagesResponses[keyof GetApiClaudeCodeSessionsBySessionIdMessagesResponses];

export type PostApiClaudeCodeSessionsBySessionIdMessagesData = {
    body: {
        content: string;
        allowedTools?: Array<string>;
    };
    path: {
        sessionId: string;
    };
    query?: never;
    url: '/api/claude-code/sessions/{sessionId}/messages';
};

export type PostApiClaudeCodeSessionsBySessionIdMessagesErrors = {
    /**
     * Default Response
     */
    404: {
        error: string;
        code?: string;
    };
};

export type PostApiClaudeCodeSessionsBySessionIdMessagesError = PostApiClaudeCodeSessionsBySessionIdMessagesErrors[keyof PostApiClaudeCodeSessionsBySessionIdMessagesErrors];

export type PostApiClaudeCodeSessionsBySessionIdMessagesResponses = {
    /**
     * Default Response
     */
    201: {
        message: {
            id: string;
            sessionId: string;
            role: 'user' | 'assistant';
            content: string;
            timestamp: string;
            claudeSessionId?: string;
            children: Array<{
                id: string;
                role: 'user' | 'assistant';
                content: string;
                timestamp: string;
                toolCalls?: Array<{
                    name: string;
                    input: unknown;
                }>;
                toolResults?: Array<{
                    tool_use_id: string;
                    content: string;
                }>;
                thinking?: string;
            }>;
        };
    };
};

export type PostApiClaudeCodeSessionsBySessionIdMessagesResponse = PostApiClaudeCodeSessionsBySessionIdMessagesResponses[keyof PostApiClaudeCodeSessionsBySessionIdMessagesResponses];

export type GetApiClaudeCodeSessionsBySessionIdFilesData = {
    body?: never;
    path: {
        sessionId: string;
    };
    query?: {
        path?: string;
        recursive?: boolean;
        pattern?: string;
    };
    url: '/api/claude-code/sessions/{sessionId}/files/';
};

export type GetApiClaudeCodeSessionsBySessionIdFilesErrors = {
    /**
     * Default Response
     */
    400: {
        error: string;
        code?: string;
    };
    /**
     * Default Response
     */
    403: {
        error: string;
        code?: string;
    };
    /**
     * Default Response
     */
    404: {
        error: string;
        code?: string;
    };
};

export type GetApiClaudeCodeSessionsBySessionIdFilesError = GetApiClaudeCodeSessionsBySessionIdFilesErrors[keyof GetApiClaudeCodeSessionsBySessionIdFilesErrors];

export type GetApiClaudeCodeSessionsBySessionIdFilesResponses = {
    /**
     * Default Response
     */
    200: {
        files: Array<{
            path: string;
            name: string;
            type: 'file' | 'directory';
            size?: number;
            modifiedAt?: string;
        }>;
        basePath: string;
    };
};

export type GetApiClaudeCodeSessionsBySessionIdFilesResponse = GetApiClaudeCodeSessionsBySessionIdFilesResponses[keyof GetApiClaudeCodeSessionsBySessionIdFilesResponses];

export type DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Data = {
    body?: never;
    path: {
        sessionId: string;
        '*': string;
    };
    query?: never;
    url: '/api/claude-code/sessions/{sessionId}/files/{*}';
};

export type DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Errors = {
    /**
     * Default Response
     */
    400: {
        error: string;
        code?: string;
    };
    /**
     * Default Response
     */
    403: {
        error: string;
        code?: string;
    };
    /**
     * Default Response
     */
    404: {
        error: string;
        code?: string;
    };
};

export type DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Error = DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Errors[keyof DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Errors];

export type DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Responses = {
    /**
     * Default Response
     */
    200: {
        success: boolean;
        path: string;
    };
};

export type DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Response = DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Responses[keyof DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Responses];

export type GetApiClaudeCodeSessionsBySessionIdFilesBy__Data = {
    body?: never;
    path: {
        sessionId: string;
        '*': string;
    };
    query?: never;
    url: '/api/claude-code/sessions/{sessionId}/files/{*}';
};

export type GetApiClaudeCodeSessionsBySessionIdFilesBy__Errors = {
    /**
     * Default Response
     */
    400: {
        error: string;
        code?: string;
    };
    /**
     * Default Response
     */
    403: {
        error: string;
        code?: string;
    };
    /**
     * Default Response
     */
    404: {
        error: string;
        code?: string;
    };
};

export type GetApiClaudeCodeSessionsBySessionIdFilesBy__Error = GetApiClaudeCodeSessionsBySessionIdFilesBy__Errors[keyof GetApiClaudeCodeSessionsBySessionIdFilesBy__Errors];

export type GetApiClaudeCodeSessionsBySessionIdFilesBy__Responses = {
    /**
     * Default Response
     */
    200: {
        path: string;
        content: string;
        encoding: string;
        size: number;
        mimeType: string;
        modifiedAt: string;
    };
};

export type GetApiClaudeCodeSessionsBySessionIdFilesBy__Response = GetApiClaudeCodeSessionsBySessionIdFilesBy__Responses[keyof GetApiClaudeCodeSessionsBySessionIdFilesBy__Responses];

export type PostApiClaudeCodeSessionsBySessionIdFilesBy__Data = {
    body: {
        content: string;
        encoding?: string;
    };
    path: {
        sessionId: string;
        '*': string;
    };
    query?: never;
    url: '/api/claude-code/sessions/{sessionId}/files/{*}';
};

export type PostApiClaudeCodeSessionsBySessionIdFilesBy__Errors = {
    /**
     * Default Response
     */
    400: {
        error: string;
        code?: string;
    };
    /**
     * Default Response
     */
    403: {
        error: string;
        code?: string;
    };
    /**
     * Default Response
     */
    409: {
        error: string;
        code?: string;
    };
};

export type PostApiClaudeCodeSessionsBySessionIdFilesBy__Error = PostApiClaudeCodeSessionsBySessionIdFilesBy__Errors[keyof PostApiClaudeCodeSessionsBySessionIdFilesBy__Errors];

export type PostApiClaudeCodeSessionsBySessionIdFilesBy__Responses = {
    /**
     * Default Response
     */
    201: {
        success: boolean;
        path: string;
    };
};

export type PostApiClaudeCodeSessionsBySessionIdFilesBy__Response = PostApiClaudeCodeSessionsBySessionIdFilesBy__Responses[keyof PostApiClaudeCodeSessionsBySessionIdFilesBy__Responses];

export type PutApiClaudeCodeSessionsBySessionIdFilesBy__Data = {
    body: {
        content: string;
        encoding?: string;
    };
    path: {
        sessionId: string;
        '*': string;
    };
    query?: never;
    url: '/api/claude-code/sessions/{sessionId}/files/{*}';
};

export type PutApiClaudeCodeSessionsBySessionIdFilesBy__Errors = {
    /**
     * Default Response
     */
    400: {
        error: string;
        code?: string;
    };
    /**
     * Default Response
     */
    403: {
        error: string;
        code?: string;
    };
    /**
     * Default Response
     */
    404: {
        error: string;
        code?: string;
    };
};

export type PutApiClaudeCodeSessionsBySessionIdFilesBy__Error = PutApiClaudeCodeSessionsBySessionIdFilesBy__Errors[keyof PutApiClaudeCodeSessionsBySessionIdFilesBy__Errors];

export type PutApiClaudeCodeSessionsBySessionIdFilesBy__Responses = {
    /**
     * Default Response
     */
    200: {
        success: boolean;
        path: string;
    };
};

export type PutApiClaudeCodeSessionsBySessionIdFilesBy__Response = PutApiClaudeCodeSessionsBySessionIdFilesBy__Responses[keyof PutApiClaudeCodeSessionsBySessionIdFilesBy__Responses];

export type GetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type GetResponses = {
    /**
     * Default Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:3001' | (string & {});
};