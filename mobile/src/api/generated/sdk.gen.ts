// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetHealthData, GetHealthResponses, GetHealthErrors, GetHealthLiveData, GetHealthLiveResponses, GetHealthReadyData, GetHealthReadyResponses, GetHealthReadyErrors, GetApiClaudeCodeRepositoriesData, GetApiClaudeCodeRepositoriesResponses, GetApiClaudeCodeRepositoriesErrors, GetApiClaudeCodeSessionsData, GetApiClaudeCodeSessionsResponses, PostApiClaudeCodeSessionsData, PostApiClaudeCodeSessionsResponses, PostApiClaudeCodeSessionsErrors, DeleteApiClaudeCodeSessionsBySessionIdData, DeleteApiClaudeCodeSessionsBySessionIdResponses, DeleteApiClaudeCodeSessionsBySessionIdErrors, GetApiClaudeCodeSessionsBySessionIdData, GetApiClaudeCodeSessionsBySessionIdResponses, GetApiClaudeCodeSessionsBySessionIdErrors, PatchApiClaudeCodeSessionsBySessionIdData, PatchApiClaudeCodeSessionsBySessionIdResponses, PatchApiClaudeCodeSessionsBySessionIdErrors, GetApiClaudeCodeSessionsBySessionIdMessagesData, GetApiClaudeCodeSessionsBySessionIdMessagesResponses, GetApiClaudeCodeSessionsBySessionIdMessagesErrors, PostApiClaudeCodeSessionsBySessionIdMessagesData, PostApiClaudeCodeSessionsBySessionIdMessagesResponses, PostApiClaudeCodeSessionsBySessionIdMessagesErrors, GetApiClaudeCodeSessionsBySessionIdFilesData, GetApiClaudeCodeSessionsBySessionIdFilesResponses, GetApiClaudeCodeSessionsBySessionIdFilesErrors, DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Data, DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Responses, DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Errors, GetApiClaudeCodeSessionsBySessionIdFilesBy__Data, GetApiClaudeCodeSessionsBySessionIdFilesBy__Responses, GetApiClaudeCodeSessionsBySessionIdFilesBy__Errors, PostApiClaudeCodeSessionsBySessionIdFilesBy__Data, PostApiClaudeCodeSessionsBySessionIdFilesBy__Responses, PostApiClaudeCodeSessionsBySessionIdFilesBy__Errors, PutApiClaudeCodeSessionsBySessionIdFilesBy__Data, PutApiClaudeCodeSessionsBySessionIdFilesBy__Responses, PutApiClaudeCodeSessionsBySessionIdFilesBy__Errors, GetData, GetResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const getHealth = <ThrowOnError extends boolean = false>(options?: Options<GetHealthData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetHealthResponses, GetHealthErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/health/',
        ...options
    });
};

export const getHealthLive = <ThrowOnError extends boolean = false>(options?: Options<GetHealthLiveData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetHealthLiveResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/health/live',
        ...options
    });
};

export const getHealthReady = <ThrowOnError extends boolean = false>(options?: Options<GetHealthReadyData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetHealthReadyResponses, GetHealthReadyErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/health/ready',
        ...options
    });
};

export const getApiClaudeCodeRepositories = <ThrowOnError extends boolean = false>(options?: Options<GetApiClaudeCodeRepositoriesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiClaudeCodeRepositoriesResponses, GetApiClaudeCodeRepositoriesErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/claude-code/repositories/',
        ...options
    });
};

export const getApiClaudeCodeSessions = <ThrowOnError extends boolean = false>(options?: Options<GetApiClaudeCodeSessionsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiClaudeCodeSessionsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/claude-code/sessions/',
        ...options
    });
};

export const postApiClaudeCodeSessions = <ThrowOnError extends boolean = false>(options?: Options<PostApiClaudeCodeSessionsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostApiClaudeCodeSessionsResponses, PostApiClaudeCodeSessionsErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/claude-code/sessions/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteApiClaudeCodeSessionsBySessionId = <ThrowOnError extends boolean = false>(options: Options<DeleteApiClaudeCodeSessionsBySessionIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiClaudeCodeSessionsBySessionIdResponses, DeleteApiClaudeCodeSessionsBySessionIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/claude-code/sessions/{sessionId}',
        ...options
    });
};

export const getApiClaudeCodeSessionsBySessionId = <ThrowOnError extends boolean = false>(options: Options<GetApiClaudeCodeSessionsBySessionIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiClaudeCodeSessionsBySessionIdResponses, GetApiClaudeCodeSessionsBySessionIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/claude-code/sessions/{sessionId}',
        ...options
    });
};

export const patchApiClaudeCodeSessionsBySessionId = <ThrowOnError extends boolean = false>(options: Options<PatchApiClaudeCodeSessionsBySessionIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchApiClaudeCodeSessionsBySessionIdResponses, PatchApiClaudeCodeSessionsBySessionIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/claude-code/sessions/{sessionId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiClaudeCodeSessionsBySessionIdMessages = <ThrowOnError extends boolean = false>(options: Options<GetApiClaudeCodeSessionsBySessionIdMessagesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiClaudeCodeSessionsBySessionIdMessagesResponses, GetApiClaudeCodeSessionsBySessionIdMessagesErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/claude-code/sessions/{sessionId}/messages',
        ...options
    });
};

export const postApiClaudeCodeSessionsBySessionIdMessages = <ThrowOnError extends boolean = false>(options: Options<PostApiClaudeCodeSessionsBySessionIdMessagesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiClaudeCodeSessionsBySessionIdMessagesResponses, PostApiClaudeCodeSessionsBySessionIdMessagesErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/claude-code/sessions/{sessionId}/messages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getApiClaudeCodeSessionsBySessionIdFiles = <ThrowOnError extends boolean = false>(options: Options<GetApiClaudeCodeSessionsBySessionIdFilesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiClaudeCodeSessionsBySessionIdFilesResponses, GetApiClaudeCodeSessionsBySessionIdFilesErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/claude-code/sessions/{sessionId}/files/',
        ...options
    });
};

export const deleteApiClaudeCodeSessionsBySessionIdFilesByPath = <ThrowOnError extends boolean = false>(options: Options<DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Responses, DeleteApiClaudeCodeSessionsBySessionIdFilesBy__Errors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/claude-code/sessions/{sessionId}/files/{*}',
        ...options
    });
};

export const getApiClaudeCodeSessionsBySessionIdFilesByPath = <ThrowOnError extends boolean = false>(options: Options<GetApiClaudeCodeSessionsBySessionIdFilesBy__Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiClaudeCodeSessionsBySessionIdFilesBy__Responses, GetApiClaudeCodeSessionsBySessionIdFilesBy__Errors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/claude-code/sessions/{sessionId}/files/{*}',
        ...options
    });
};

export const postApiClaudeCodeSessionsBySessionIdFilesByPath = <ThrowOnError extends boolean = false>(options: Options<PostApiClaudeCodeSessionsBySessionIdFilesBy__Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiClaudeCodeSessionsBySessionIdFilesBy__Responses, PostApiClaudeCodeSessionsBySessionIdFilesBy__Errors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/claude-code/sessions/{sessionId}/files/{*}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putApiClaudeCodeSessionsBySessionIdFilesByPath = <ThrowOnError extends boolean = false>(options: Options<PutApiClaudeCodeSessionsBySessionIdFilesBy__Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutApiClaudeCodeSessionsBySessionIdFilesBy__Responses, PutApiClaudeCodeSessionsBySessionIdFilesBy__Errors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/claude-code/sessions/{sessionId}/files/{*}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const get = <ThrowOnError extends boolean = false>(options?: Options<GetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/',
        ...options
    });
};